# To create the app inside a folder
npx create-next-app@latest ./ --typescript --tailwind --eslint

# Second step
npx shadcn-ui@latest init

# == Clerk website == 
1. npm install @clerk/nextjs

# == for button component ==
1. npx shadcn-ui@latest add button

# == for prisma ==
1. npm install -D prisma
2. npx prisma init
3. npm i @prisma/client
4. npx prisma generate --> add all the models to the database
5. npx prisma db push --> push the schema through the database_url
6. npx prisma studio --> checking the data inside the studio

# If we adjust something inside the prisma (don't forget to stop the website on terminal)
1. npx prisma generate --> will update the schema
2. npx prisma db push --> push the new database through database_url
#############################################

# == dummy data and prisma connection == 
1. node scripts/seed.ts --> to send the dummy data to prisma studio

# == Hook form component == 
1. npx shadcn-ui@latest add form 

# == Input component == 
1. npx shadcn-ui@latest add input

# == Combobox component == 
1. npx shadcn-ui@latest add popover
2. npx shadcn-ui@latest add command

# == CMDK downgrading for the ComboBox to remove error ==
1. npm install cmdk@0.2.1

# == axios for api requests to the backend ==
1. npm i axios

# == React Quill == 
1. npm install react-quill --save

# == react-hot-toast ==
1. npm i react-hot-toast

# == Uploadthing website ==
1. npm install uploadthing @uploadthing/react

# == For drag and drop ==
1. npm i @hello-pangea/dnd

# == switch component ==
1. npx shadcn-ui@latest add switch

# == Mux Video ==
1. npm i @mux/mux-node
2. npm i @mux/mux-player-react

# == Alert dialog component ==
1. npx shadcn-ui@latest add alert-dialog

# == Alert component ==
1. npx shadcn-ui@latest add alert

# == Data table component ==
1. npx shadcn-ui@latest add table
2. npm install @tanstack/react-table

# == Badge component ==
1. npx shadcn-ui@latest add badge

#== Stripe ==
1. npm i stripe

# == TO USE WEBHOOKS for payment ==
1. In stripe go to > Developers > Webhooks > Add endpoint

# to Download the ZIP FILE 
1. Download the latest windows zip file from GitHub.
2. Unzip the stripe_X.X.X_windows_x86_64.zip file.
3. Add the path to the unzipped stripe.exe file to your Path environment variable.

4. On Command prompt terminal type > stripe login > press "enter"
5. A new page from stripe will appear, click >  "Allow access"
6. On Command prompt terminal type > stripe listen --forward-to localhost:4242/webhook > copy the STRIPE_WEBHOOK_SECRET key
7. Copy and paste the key to STRIPE_WEBHOOK_SECRET variable in .env file.
#==============================================

# == Progress component == 
1. npx shadcn-ui@latest add progress

# == Card component ==
1. npx shadcn-ui@latest add card

# == Recharts ==
1. npm install recharts

# == sheet ==
1. npx shadcn-ui@latest add sheet

























# ========= WEBSITE LINKS BELOW with its purposes ========= #

# Useful resources
1. https://ui.shadcn.com/docs/installation/next --> creating new projects
2. https://nextjs.org/docs/app/building-your-application/routing/route-groups --> for creating different layout in every page
3. https://clerk.com/ --> for creating login and signup forms
4. https://lucide.dev/icons/ --> for icons
5. https://clerk.com/docs/references/react/use-auth#use-auth --> if error occurs for using useAuth()
6. https://aiven.io/ --> for choosing a database 
7. https://ui.shadcn.com/docs/components/form --> React Hook Form
8. https://uploadthing.com/ --> to upload images/videos/files
9. https://www.mux.com/ -- > To display and run the video on the client side. 
10. https://clerk.com/docs/references/nextjs/current-user --> for currentUser()
11 https://clerk.com/docs/reference/backend-api/tag/Users#operation/GetUser --> retrieve the current user
12. https://recharts.org/en-US/guide --> to install recharts